//#include <WiFiClientSecure.h>
#include <ThingerESP32.h>
#include <DHT.h>
#define USERNAME "RianW21"
#define DEVICE_ID "KNN"
#define DEVICE_CREDENTIAL "8BOFycK#H1TiC0V!"
#define SSID "Wibowo"
#define SSID_PASSWORD "ShefiyA18"
ThingerESP32 thing(USERNAME, DEVICE_ID, DEVICE_CREDENTIAL);

#define FLAME_PIN 32 //pin D1 
#define DHT_PIN 33 //pin D5 
#define DHTTYPE DHT11 
#define BUZZER_PIN 25 //pin D6 
DHT dht(DHT_PIN, DHTTYPE);

// const char* host = "script.google.com";
// const int httpsPort = 443;

//WiFiClientSecure client;

float temperature,humidity;
float sensor_api;
int Sensor_Gas = 34;
int Sensor_Api = 32;

unsigned long previousMillis = 0;
const long interval = 100; 
float data[2]; //This is your feature vector. Retrive your data into this array.'
//This code was autogenerated using micro-learn.
//Use the dummy variable array 'data' to interact with the ML inference.

double w[] = {2.1702011408802178, -0.22665258129142904};
double u[] = {28.91024258760108, 71.51482479784367};
double p[] = {0.1926887557254256, 0.08386349760235391};

double c = 0.408884959871017;

void setup() {
    Serial.begin(9600);
    
    pinMode(Sensor_Gas, INPUT);
    pinMode(Sensor_Api, INPUT); 
    pinMode(BUZZER_PIN, OUTPUT);
    WiFi.begin(SSID, SSID_PASSWORD);
    thing.add_wifi(SSID, SSID_PASSWORD);
    dht.begin();
    thing["Dataku"] >> [](pson & out)
      {
      
          out["humidity"]		= data[1]; 
          out["temperature"] = data[0]; 
          out["sensor_api"]	= sensor_api;
      };    

}

void loop() {
    //Data Section: To Be Coded Manually
    //Serial.println("");
    //Serial.println("WiFi connected");
    //Serial.println("IP address: ");
    //Serial.println(WiFi.localIP());
    //client.setInsecure();
            
    unsigned long currentMillis = millis(); // baca waktu millis saat ini 
    delay(500);
    if(currentMillis - previousMillis >= interval)
    {
            
        previousMillis = currentMillis;
        delay(500);
        sensor_api = digitalRead(Sensor_Api);
        Serial.print("Fire Class: ");
        Serial.print(sensor_api);
        Serial.print("\t");
        Serial.print("\t");
        data[1]	= dht.readHumidity(); 
        data[0] = dht.readTemperature();
        int api = digitalRead(FLAME_PIN);
        double temp = 0.0;
        Serial.print("Humidity: ");
        Serial.print(data[1]);
        Serial.print("\t");
        Serial.print("Suhu: ");
        Serial.print(data[0]);
    for(int i=0; i<2; i++)
    {
        temp += (data[i]-u[i]) * p[i] * w[i];
        //Serial.print(" check ");
        //Serial.print(i);
        //Serial.print("\t");
        //Serial.print(temp);
    }

    if(temp >= c && sensor_api > 0)
    {
        //Do something for class label 1.
        thing.call_endpoint("knnsvm");
        Serial.println("kebakaran");
        digitalWrite(BUZZER_PIN, HIGH); 
        delay(500);
    }
    else
    {
      if (temp > 0.95 ){
                //Do something for class label 1.
        thing.call_endpoint("knnsvm");
        Serial.println("kebakaran");
        digitalWrite(BUZZER_PIN, HIGH); 
        delay(500);
      }
      else {
                //Do something for class label 0.
        Serial.println("Tidak Kebakaran");
        digitalWrite(BUZZER_PIN, LOW); 
        delay(500);
      }
    }

    delay(1000);
  }
thing.handle();  
}